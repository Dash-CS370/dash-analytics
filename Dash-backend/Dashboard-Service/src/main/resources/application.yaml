server:
  port: 8080


spring:

  application:
    name: Dashboard-Service
    default-start-credits: 100

  data:
    mongodb:
      uri: mongodb+srv://gpmoral:gMC20002@dev-cluster.ul8671y.mongodb.net/?retryWrites=true&w=majority
      database: Dash-Analytics

  servlet:
    multipart:
      max-file-size: 5MB

  security:
    oauth2:
      client:
        registration:
          Dash:
            provider: spring
            client-id: ${DASH_CLIENT_ID}
            client-secret: ${DASH_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "http://3.138.112.56:8080/login/oauth2/code/{registrationId}"
            scope: openid
            client-name: Dash

          resource-access-client:
            provider: spring
            client-id: ${RESOURCE_CLIENT_ID}
            client-secret: ${RESOURCE_CLIENT_SECRET}
            authorization-grant-type: client_credentials
            redirect-uri: "http://3.138.112.56:8080/authorized"
            scope: api.read
            client-name: resource-access-client

          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}

          azure-ad:
            client-id: ${AZURE_CLIENT_ID}
            client-secret: ${AZURE_CLIENT_SECRET}
            provider: azure
            authorization-grant-type: authorization_code
            redirect-uri: "http://3.138.112.56:8080/login/oauth2/code/azure"
            scope: openid

        provider:
          spring:
            issuer-uri: http://3.138.112.56:9000
          azure:
            issuer-uri: https://login.microsoftonline.com/0f19a1a1-232d-464f-a8c9-0d29e84f0a42/v2.0



eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true

  instance:
    hostname: localhost
